swagger: "2.0"
info:
  title: "REST API module"
  description: "This is a project from 'Global learning program' which works with Events."
  version: "1.0.0"
tags:
- name: "event"
host: 127.0.0.1:8080
schemes:
  - http
paths:
  /events:
    get:
      tags:
      - "event"
      summary: "Get all Events"
      description: "Returns an List of Events"
      produces:
        - application/json
      responses:
        "200":
          description: "Get an List of Events"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Event'
        "400":
          description: "Invalid tag value"
    post:
      tags:
      - "event"
      summary: "Add a new Event to the store"
      description: "Add a new Event to the store"
      produces:
        - application/json
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be added to the store"
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        "201":
          description: "Event created"
        "405":
          description: "Invalid input"
    put:
      tags:
      - "event"
      summary: "Update an existing event"
      description: "Update an existing event"
      produces:
        - application/json
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be changed to the store"
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        "200":
          description: "successful update"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
        "405":
          description: "Validation exception"
  /events/getByTitle:
    get:
      tags:
      - "event"
      summary: "Finds all Events by title"
      description: "Title value must be take in URL as parameter '?title=&lt;title>'"
      produces:
        - application/json
      parameters:
      - name: "title"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Event'
        "400":
          description: "Invalid status value"
  /events/{id}:
    get:
      tags:
      - "event"
      summary: "Find Event by id"
      description: "Returns a single Event"
      produces:
        - application/json
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Event'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
    delete:
      tags:
      - "event"
      summary: "Deleting a Event"
      description: "Delete a Event by id"
      produces:
        - application/json
      parameters:
      - name: "id"
        in: "path"
        description: "Pet id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
definitions:
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      place:
        type: "string"
      speaker:
        type: "string"
      eventType:
        type: "string"
      dateTime:
        type: "string"
        format: "date-time"